DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = NULL
)
Opt1$fit$path_theta[trajSub0,]
Opt0$fit$path_theta
library(gammaFrailty)
Opt1 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = NULL
)
Opt1$fit$path_theta[trajSub0,]
Opt0$fit$path_theta
Opt1$iterations_subset
trajSub <- c(50, 100, 1000, 2000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
Opt0$iterations_subset
par_init
repar_theta
library(gammaFrailty)
##################
#### libraries #####
library(tidyverse)
###### choose true model
p <- 12
q <- 8
xi <- 2/q
rho <- .6
m <- 2
n <- 250
int <- rep(log(4), p)#runif(p, 0, 1)
b <- rep(0, m) #rnorm(m, 0, .5) #
X <- matrix(rbinom(m*n, 1, .5), n, m)#matrix(runif(m*n, 0, 1), n, m)
theta <- c(xi, rho, b, int)
repar_theta <- partorepar(theta)
##### generate the data ###
dt <- generate_data(
intercept = int,
beta = b,
X = X,
q = q,
rho = rho,
seed = 1
)
##### estimation ####
par_init <- repar_theta + runif(length(repar_theta), -1, 1)
ctrl <- list(
MAXT = n^1.5,
BURN = 100,
STEPSIZE = .001,
#STEPSIZE0 = .0005,
NU = 1,
SEED = 123
)
ctrl <- list()
trajSub <- c(50, 100, 1000, 2000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
library(gammaFrailty)
ctrl <- list()
trajSub <- c(50, 100, 1000, 2000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
library(gammaFrailty)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
library(gammaFrailty)
Opt0
trajSub <- c(50, 100, 1000, 2000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
Opt0
library(gammaFrailty)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
Opt0
library(gammaFrailty)
library(gammaFrailty)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
Opt0
library(gammaFrailty)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
Opt0
ctrl <- list()
trajSub <- c(50, 100, 1000, 2000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = NULL
)
Opt0
p <- 30
q <- 8
xi <- 2/q
rho <- .6
m <- 2
n <- 1000
int <- rep(log(4), p)#runif(p, 0, 1)
b <- rep(0, m) #rnorm(m, 0, .5) #
X <- matrix(rbinom(m*n, 1, .5), n, m)#matrix(runif(m*n, 0, 1), n, m)
theta <- c(xi, rho, b, int)
repar_theta <- partorepar(theta)
##### generate the data ###
dt <- generate_data(
intercept = int,
beta = b,
X = X,
q = q,
rho = rho,
seed = 1
)
##### estimation ####
par_init <- repar_theta + runif(length(repar_theta), -1, 1)
ctrl <- list(
MAXT = n^1.5,
BURN = 100,
STEPSIZE = .001,
#STEPSIZE0 = .0005,
NU = 1,
SEED = 123
)
ctrl
ctrl <- list(
MAXT = n,
BURN = 100,
STEPSIZE = .001,
#STEPSIZE0 = .0005,
NU = 1,
SEED = 123
)
ctrl <- list()
trajSub <- c(50, 100, 500, 1000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = NULL
)
ctrl <- list(
MAXT = n,
BURN = 100,
STEPSIZE = .001,
#STEPSIZE0 = .0005,
NU = 1,
SEED = 123
)
#ctrl <- list()
trajSub <- c(50, 100, 500, 1000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = NULL
)
Opt0
#ctrl <- list()
trajSub <- c(50, 100, 500, 1000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
Opt0
mean((repartopar(Opt0$theta)-theta)^2)
mean((repartopar(Opt0$theta_init)-theta)^2)
#ctrl <- list()
trajSub <- c(50, 100, 500, 1000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'ucminf',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
Opt0
mean((repartopar(Opt0$theta)-theta)^2)
mean((repartopar(Opt0$theta_init)-theta)^2)
n^.5
ctrl <- list()
trajSub <- c(50, 100, 500, 1000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'GD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt0$theta)-theta)^2)
mean((repartopar(Opt0$theta_init)-theta)^2)
library(gammaFrailty)
library(gammaFrailty)
ctrl <- list()
trajSub <- c(50, 100, 500, 1000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'GD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt0$theta)-theta)^2)
library(gammaFrailty)
library(gammaFrailty)
ctrl <- list(
MAXT = n,
BURN = 100,
STEPSIZE = .001,
#STEPSIZE0 = .0005,
NU = 1,
SEED = 123
)
trajSub <- c(50, 100, 500, 1000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt0$theta)-theta)^2)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SCSD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt0$theta)-theta)^2)
p <- 50
q <- 8
xi <- 2/q
rho <- .6
m <- 2
n <- 1000
int <- rep(log(4), p)#runif(p, 0, 1)
b <- rep(0, m) #rnorm(m, 0, .5) #
X <- matrix(rbinom(m*n, 1, .5), n, m)#matrix(runif(m*n, 0, 1), n, m)
theta <- c(xi, rho, b, int)
repar_theta <- partorepar(theta)
##### generate the data ###
dt <- generate_data(
intercept = int,
beta = b,
X = X,
q = q,
rho = rho,
seed = 1
)
ctrl <- list(
MAXT = n,
BURN = 100,
STEPSIZE = .001,
#STEPSIZE0 = .0005,
NU = 1,
SEED = 123
)
trajSub <- c(50, 100, 500, 1000)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SCSD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
##### estimation ####
par_init <- repar_theta + runif(length(repar_theta), -1, 1)
Opt0 <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SCSD',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt0$theta)-theta)^2)
Opt_u <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'ucminf',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt_u$theta)-theta)^2)
ctrl_scsd <- list(
MAXT = n,
BURN = 100,
STEPSIZE = .001,
#STEPSIZE0 = .0005,
NU = 1,
SEED = 123
)
ctrl_scsd <- list(
MAXT = n,
BURN = 100,
STEPSIZE = .001,
#STEPSIZE0 = .0005,
NU = 1,
SEED = 123
)
Opt_sgd <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl_scsd,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt_sgd$theta)-theta)^2)
Opt_scsd <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SCSD',
CPP_CONTROL = ctrl_scsd,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt_sgd$theta)-theta)^2)
mean((repartopar(Opt_scsd$theta)-theta)^2)
ctrl_gd <- list(MAXT = n^.5)
Opt_gd <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'GD',
CPP_CONTROL = ctrl_gd,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt_gd$theta)-theta)^2)
Opt_gd <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'GD',
CPP_CONTROL = list(),
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt_gd$theta)-theta)^2)
Opt_gd
ctrl_gd <- list(MAXT = n^.5,     STEPSIZE = .001,)
ctrl_gd <- list(MAXT = n^.5,     STEPSIZE = .001)
Opt_gd <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'GD',
CPP_CONTROL = list(),
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
Opt_gd <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'GD',
CPP_CONTROL = ctrl_gd,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt_gd$theta)-theta)^2)
ctrl_gd <- list(MAXT = n^.75,     STEPSIZE = .001)
Opt_gd <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'GD',
CPP_CONTROL = ctrl_gd,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt_gd$theta)-theta)^2)
mean((repartopar(Opt_scsd$theta)-theta)^2)
p <- 50
q <- 8
xi <- 2/q
rho <- .6
m <- 2
n <- 2000
int <- rep(log(4), p)#runif(p, 0, 1)
b <- rep(0, m) #rnorm(m, 0, .5) #
X <- matrix(rbinom(m*n, 1, .5), n, m)#matrix(runif(m*n, 0, 1), n, m)
theta <- c(xi, rho, b, int)
repar_theta <- partorepar(theta)
##### generate the data ###
dt <- generate_data(
intercept = int,
beta = b,
X = X,
q = q,
rho = rho,
seed = 1
)
##### estimation ####
par_init <- repar_theta + runif(length(repar_theta), -1, 1)
ctrl_scsd <- list(
MAXT = n,
BURN = 100,
STEPSIZE = .001,
#STEPSIZE0 = .0005,
NU = 1,
SEED = 123
)
ctrl_gd <- list(MAXT = n^.75,     STEPSIZE = .001)
trajSub <- c(50, 100, 500, 1000)
mean((repartopar(Opt0$theta_init)-theta)^2)
Opt_u <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'ucminf',
CPP_CONTROL = ctrl,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt_u$theta)-theta)^2)
Opt_sgd <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SGD',
CPP_CONTROL = ctrl_scsd,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt_sgd$theta)-theta)^2)
Opt_scsd <- fit_gammaFrailty(
DATA_LIST = list('DATA' = dt, 'X' = X),
METHOD = 'SCSD',
CPP_CONTROL = ctrl_scsd,
VERBOSEFLAG= 0,
INIT = par_init,
ITERATIONS_SUBSET = trajSub
)
mean((repartopar(Opt_scsd$theta)-theta)^2)
source("~/.active-rstudio-document", echo=TRUE)
